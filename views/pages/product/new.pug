extends ../../layouts/dashboard.pug

mixin checkError(errors, pError)
    if errors
        each error in errors
            if (error.param === pError)
                p(style={'color': 'red', 'font-size': '0.7em'})= error.msg


block config
    - var bodyClass = 'sb-nav-fixed'
    - var pageTitle = 'Create new product';
    - var index = true;
    - var sidenavStyle = 'sb-sidenav-dark'
    
block content

    .container-fluid.my-2
        include ../includes/page-header.pug
        a(href="/products")
            button.btn.btn-primary Return to all
        .row
            .col-sm-12.form
                form(action='/products/create', method='POST', enctype="multipart/form-data" id="form").my-2
                    .row
                        .col-sm-6
                            .form-group
                                label Title
                                input(type="text", name='title' required).form-control
                                +checkError(errors, 'title')
                            .form-group
                                label Description
                                textarea(name="description", cols="30", rows="4" required).form-control
                                +checkError(errors, 'description')
                            .form-group
                                label Price
                                input(type="text", name='price' required).form-control
                                +checkError(errors, 'price')
                            .form-group
                                label Discount
                                input(type="text", name='discount').form-control
                                +checkError(errors, 'discount')
                            .form-group
                                label Brand
                                select(name='brand' required).custom-select
                                    option(value='') Please Select
                                    each item in brands
                                        option(value=item.id)=item.name
                            .form-group
                                label Category
                                    .form-row
                                    each category in categories
                                            input.category(type="checkbox" name=category.name).d-inline
                                            label(for=category.name class="mx-2")=category.name

                            .custom-file.my-2
                                input(type="file" id="customFile" name="image"  multiple="multiple" required).form-control

                        .col-sm-6
                            label Sizes
                            .sizesWrapper
                                    each item in sizes
                                        .form-group
                                            input(type="number" id=item.number disabled placeholder="Quantity" ).form-control.quantity
                                            input(type="checkbox" name=item.number onclick=`handleCheckboxClick(event)` ).sizesCheckbox.d-inline.mr-2
                                            label(for=item.number class="d-inline")=item.number

                    .row
                        .col-sm-12
                            input(type="hidden", name="sizes", id="arrSizeQuantity")
                            input(type="hidden" name="categories" id="arrCategories")

                            input(type="submit" value="Create" class="button" onclick="handleCreate(event)").btn-primary.btn.my-2

    script.

        let arrSizeQuantity = new Array();
        let arrCategories = new Array();
        
        function initializeSizeForm(){
            let checkboxs =  document.getElementsByClassName('sizesCheckbox');
            for(item of checkboxs){
                item.checked = false;
            }
            let quantityInputs = document.getElementsByClassName('quantity')
            for(item of quantityInputs){
                item.disabled = true;
                item.value = '';
            }

            document.getElementById('form').reset();

        }

        function handleCheckboxClick(event) {
            let inputQuantity = document.getElementById(event.target.name);

            if(event.target.checked){
                inputQuantity.disabled = false;

                let sizeQuantity = {};

                sizeQuantity.size = parseInt(inputQuantity.id);

                inputQuantity.addEventListener('input', () => {
                    sizeQuantity.quantity = parseInt(inputQuantity.value);
                });
                arrSizeQuantity.push(sizeQuantity);
            } else {
                inputQuantity.disabled = true;
                let position = arrSizeQuantity.findIndex(item => item.size === parseInt(event.target.name));
                arrSizeQuantity.splice(position,1);
            }
        }

        //- Paso el array al value del input tipo hidden al crear el prod.
        function handleCreate(event){
            //eliminamos los valores duplicados
            let set = new Set(arrSizeQuantity.map(JSON.stringify))
            arrSizeQuantity = Array.from(set).map(JSON.parse);

            document.getElementById('arrSizeQuantity').value = JSON.stringify(arrSizeQuantity);

            // Get all the checked categories and store them in arrCategories
            const categories = document.getElementsByClassName('category');
            for (category of categories) {
                if (category.checked) {
                    arrCategories.push(category.name);
                }
            }

            // Send the arrCategories within the form body
            document.getElementById('arrCategories').value = JSON.stringify(arrCategories);
        }

        //- Reseteo los checkbox al entrar:
        initializeSizeForm();